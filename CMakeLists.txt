cmake_minimum_required(VERSION 2.8)
project(gloo)

#set compiler flags
if(APPLE)
    if("${CMAKE_CXX_COMPILER_ID}" STREQUAL "Clang")
        set(CMAKE_CXX_FLAGS "-std=c++11 -m64")
        set(CLANG_CXX_FLAGS "${CLANG_CXX_FLAGS} -O3")
        set(CLANG_CXX_FLAGS "${CLANG_CXX_FLAGS} -funroll-loops")
        set(CLANG_CXX_FLAGS "${CLANG_CXX_FLAGS} -Wno-narrowing")
        set(CLANG_CXX_FLAGS "${CLANG_CXX_FLAGS} -Wno-deprecated-register")
        set(CLANG_CXX_FLAGS "${CLANG_CXX_FLAGS} -Wno-deprecated-declarations")
        set(CLANG_CXX_FLAGS "${CLANG_CXX_FLAGS}  -Wno-c++11-extensions")
        set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${CLANG_CXX_FLAGS}")
    endif()

    if("${CMAKE_CXX_COMPILER_ID}" STREQUAL "GNU")
        set(GCC_CXX_FLAGS "-std=gnu++11 -m64")
        set(GCC_CXX_FLAGS "${GCC_CXX_FLAGS} -O3")
        set(GCC_CXX_FLAGS "${GCC_CXX_FLAGS} -fopenmp")
        set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${GCC_CXX_FLAGS}")
    endif()
endif(APPLE)

set(LINUX UNIX AND NOT APPLE)

if(LINUX)
    if(${CMAKE_CXX_COMPILER_ID} STREQUAL "GNU")
        set(GCC_CXX_FLAGS "-std=gnu++11 -m64")
        set(GCC_CXX_FLAGS "${GCC_CXX_FLAGS} -lXi")
        set(GCC_CXX_FLAGS "${GCC_CXX_FLAGS} -lXxf86vm")
        set(GCC_CXX_FLAGS "${GCC_CXX_FLAGS} -lXinerama")
        set(GCC_CXX_FLAGS "${GCC_CXX_FLAGS} -lXcursor")
        set(GCC_CXX_FLAGS "${GCC_CXX_FLAGS} -lXfixes")
        set(GCC_CXX_FLAGS "${GCC_CXX_FLAGS} -lXrandr")
        set(GCC_CXX_FLAGS "${GCC_CXX_FLAGS} -lXext")
        set(GCC_CXX_FLAGS "${GCC_CXX_FLAGS} -lXrender")
        set(GCC_CXX_FLAGS "${GCC_CXX_FLAGS} -lX11")
        set(GCC_CXX_FLAGS "${GCC_CXX_FLAGS} -lpthread")
        set(GCC_CXX_FLAGS "${GCC_CXX_FLAGS} -lxcb")
        set(GCC_CXX_FLAGS "${GCC_CXX_FLAGS} -lXau")
        set(GCC_CXX_FLAGS "${GCC_CXX_FLAGS} -O3")
        set(GCC_CXX_FLAGS "${GCC_CXX_FLAGS} -fopenmp")
        set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${GCC_CXX_FLAGS}")
    endif()
endif(LINUX)

find_package(OpenGL REQUIRED)
find_package(Threads REQUIRED)
find_package(Freetype REQUIRED)
find_package(GLEW REQUIRED)
find_package(GLUT REQUIRED)

add_subdirectory(src)
